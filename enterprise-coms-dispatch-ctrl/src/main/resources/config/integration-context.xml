<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:si="http://www.springframework.org/schema/integration"
	xmlns:si-jdbc="http://www.springframework.org/schema/integration/jdbc"
	xmlns:si-jms="http://www.springframework.org/schema/integration/jms"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd   
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd   
        http://www.springframework.org/schema/integration http://www.springframework.org/schema/integration/spring-integration-4.0.xsd
		http://www.springframework.org/schema/integration/jdbc  http://www.springframework.org/schema/integration/jdbc/spring-integration-jdbc-4.0.xsd
		http://www.springframework.org/schema/integration/jms  http://www.springframework.org/schema/integration/jms/spring-integration-jms-4.0.xsd">

	<!-- <context:property-placeholder ignore-unresolvable="true" location="classpath*:queries/sql-query.properties" 
		/> -->

	<bean id="envPropertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:properties/db_${spring.profiles.active}.properties
				</value>
				<value>classpath*:properties/jms_${spring.profiles.active}.properties
				</value>
				<value>classpath*:queries/sql-query.properties</value>
				<value>classpath*:properties/ecom.properties</value>
			</list>
		</property>
	</bean>

	<!-- <context:property-placeholder location="classpath*:properties/db_${spring.profiles.active}.properties, 
		classpath*:properties/jms_${spring.profiles.active}.properties, classpath*:queries/sql-query.properties" 
		/> -->

	<import resource="classpath*:config/datasource-context.xml" />
	<import resource="classpath*:config/service-context.xml" />
	<import resource="classpath*:config/jms-context.xml" />

	<!-- Channels -->
	<si:channel id="inputChannel">
		<si:interceptors>
			<si:wire-tap channel="logger" />
		</si:interceptors>
	</si:channel>
	<si:channel id="msgSplitChannel" />
	<si:channel id="resultChannel" />
	<si:channel id="queueNameChannel" />

	<si:logging-channel-adapter id="logger"
		level="DEBUG" />

	<!-- In bound Channel Adapter -->
	<si-jdbc:inbound-channel-adapter id="queueNameIBChannel"
		data-source="dataSource" channel="queueNameChannel" query="${GET.QUEUE.NAME}"
		max-rows-per-poll="1" select-sql-parameter-source="parameterSource"
		row-mapper="queueRowMapper">
		<si:poller fixed-rate="60000">
			<si:transactional />
		</si:poller>
	</si-jdbc:inbound-channel-adapter>
	
      <!-- Instead of 50 transactions  dispatcher will pull 100 transactions(prev 50per trx) -->
	<si-jdbc:inbound-channel-adapter id="dispatchIBChannel"
		data-source="dataSource" channel="inputChannel" query="${GET.TRX.HDR.ID}"
		select-sql-parameter-source="parameterSource" max-rows-per-poll="100"
		row-mapper="trxRowMapper" update-per-row="true" update="${UPDATE.TRX.HDR}">
		<!-- To avoid the excessive CPU usage of database instead of 2sec changed to 4sec -->
		<si:poller fixed-rate="4000">
			<si:transactional />
		</si:poller>
	</si-jdbc:inbound-channel-adapter>

	<!-- Service Activator -->
	<si:service-activator id="queueNameRefreshService"
		input-channel="queueNameChannel" ref="qNameRefreshService" method="refreshProperty" />

	<si:service-activator id="dispatchService"
		input-channel="inputChannel" output-channel="msgSplitChannel" ref="dispatchCtrlService"
		method="dispatchHeaderIds" />

	<si:splitter input-channel="msgSplitChannel"
		output-channel="resultChannel" id="trxIdSpitterRouter" ref="dispatchCtrlService"
		method="split">
	</si:splitter>

	<si:service-activator  input-channel="errorChannel" ref="dispatchCtrlService"
		method="handleError"/>
	<!-- Out Bound Channel Adapter -->
	<si-jms:outbound-channel-adapter id="tibcoInboundAdapter"
		jms-template="tibcoInboundJmsTemplate" channel="resultChannel" />
</beans>